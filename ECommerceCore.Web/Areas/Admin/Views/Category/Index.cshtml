@using ECommerceCore.Application.Contract.ViewModels
@model CategoryVM

@{
    var model = Model.Category;
    Console.WriteLine(model);
}
@* <!-- Card Wrapper -->
<div class="card shadow-lg border-0 rounded-3">
    <!-- Header -->
    <div class="card-header py-4" style="background: linear-gradient(90deg, #343a40, #6c757d);">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="text-white fw-bold mb-0">Category Management</h4>
            <button class="btn btn-light fw-bold shadow-sm px-4" data-bs-toggle="modal" data-bs-target="#categoryModal">
                <i class="bi bi-plus-circle me-2"></i> Add Category
            </button>
        </div>
    </div>

    <!-- Body -->
    <div class="card-body p-4 bg-light">
        @if (!Model.Categories.Any())
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <i class="bi bi-folder-x text-secondary" style="font-size: 3rem;"></i>
                <h5 class="mt-3 text-muted">No categories available.</h5>
                <p class="text-muted">Click the "Add Category" button above to create a new one.</p>
            </div>
        }
        else
        {
            <!-- Table Wrapper -->
            <div class="table-responsive">
                <table class="table table-hover align-middle bg-white rounded-3 shadow-sm">
                    <thead class="text-uppercase bg-dark text-white">
                        <tr>
                            <th scope="col" class="text-start px-4">Category Name</th>
                            <th scope="col" class="text-center">Display Order</th>
                            <th scope="col" class="text-center">Status</th>
                            <th scope="col" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Model.Categories.OrderBy(u => u.DisplayOrder))
                        {
                            <tr>
                                <td class="px-4 fw-semibold">@obj.Name</td>
                                <td class="text-center">@obj.DisplayOrder</td>
                                <td class="text-center">
                                    <span class="badge bg-success px-3 py-2">Active</span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <a href="javascript:void(0);"
                                           class="btn btn-outline-warning btn-sm fw-bold"
                                           data-bs-toggle="modal"
                                           data-bs-target="#categoryModal"
                                           data-id="@obj.Id"
                                           data-name="@obj.Name"
                                           data-display-order="@obj.DisplayOrder"
                                           onclick="populateEditModal(this)">
                                            <i class="bi bi-pencil-square me-1"></i> Edit
                                        </a>
                                        <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.Id"
                                           class="btn btn-outline-danger btn-sm fw-bold">
                                            <i class="bi bi-trash me-1"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Modal for Creating/Updating Category -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header" style="background: linear-gradient(90deg, #343a40, #6c757d);">
                <h5 class="modal-title text-white" id="categoryModalLabel">
                    @if (Model.Category?.Id == null)
                    {
                        <span>Create New Category</span>
                    }
                    else
                    {
                        <span>Edit Category</span>
                    }
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post"
                      asp-controller="Category"
                      asp-action="@((Model.Category?.Id == null) ? "Create" : "Edit")"
                      asp-route-id="@Model.Category?.Id">
                    <div class="mb-3">
                        <label asp-for="Category.Name" class="form-label">Category Name</label>
                        <input asp-for="Category.Name" class="form-control" placeholder="Enter category name" required />
                        <span asp-validation-for="Category.Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Category.DisplayOrder" class="form-label">Display Order</label>
                        <input asp-for="Category.DisplayOrder" class="form-control" placeholder="Enter display order" required />
                        <span asp-validation-for="Category.DisplayOrder" class="text-danger"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">
                            @if (Model.Category?.Id == null)
                            {
                                <span>Create</span>
                            }
                            else
                            {
                                <span>Update</span>
                            }
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div> *@
@* 
@section Scripts {
    <script>
        function populateEditModal(element) {
            // Get data attributes from the clicked element
            const categoryId = element.getAttribute('data-id');
            const categoryName = element.getAttribute('data-name');
            const displayOrder = element.getAttribute('data-display-order');

            // Populate the modal fields
            // document.getElementById('categoryModalLabel').innerText = 'Edit Category';
            document.querySelector('[name="Category.Name"]').value = categoryName || '';
            document.querySelector('[name="Category.DisplayOrder"]').value = displayOrder || '';

            // Update the form action
            const form = document.querySelector('form');
            form.setAttribute('action', `/Category/Edit/${categoryId}`);
        }
    </script>
    <partial name="_ValidationScriptsPartial" />
} *@

@* <!-- Card Wrapper -->
<div class="card shadow-lg border-0 rounded-3 overflow-hidden">
    <!-- Header -->
    <div class="card-header py-4 text-white d-flex justify-content-between align-items-center"C>
        <h4 class="fw-bold mb-0"><i class="bi bi-grid me-2"></i>Category Management</h4>
        <button class="btn btn-light fw-bold shadow-sm px-4" data-bs-toggle="modal" data-bs-target="#categoryModal">
            <i class="bi bi-plus-circle me-2"></i> Add Category
        </button>
    </div>

    <!-- Body -->
    <div class="card-body p-4 bg-light">
        @if (!Model.Categories.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-folder-x text-secondary" style="font-size: 3rem;"></i>
                <h5 class="mt-3 text-muted">No categories available.</h5>
                <p class="text-muted">Click the "Add Category" button above to create a new one.</p>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover align-middle bg-white rounded-3 shadow-sm">
                    <thead class="text-uppercase bg-gradient text-white" style="background: linear-gradient(135deg, #ff416c, #ff4b2b);">
                        <tr>
                            <th scope="col" class="text-start px-4">Category Name</th>
                            <th scope="col" class="text-center">Display Order</th>
                            <th scope="col" class="text-center">Status</th>
                            <th scope="col" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Model.Categories.OrderBy(u => u.DisplayOrder))
                        {
                            <tr>
                                <td class="px-4 fw-semibold">@obj.Name</td>
                                <td class="text-center">@obj.DisplayOrder</td>
                                <td class="text-center">
                                    <span class="badge bg-success px-3 py-2">Active</span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group">
                                        <button class="btn btn-outline-primary btn-sm fw-bold" data-bs-toggle="modal" data-bs-target="#categoryModal" data-id="@obj.Id" data-name="@obj.Name" data-display-order="@obj.DisplayOrder" onclick="populateEditModal(this)">
                                            <i class="bi bi-pencil-square me-1"></i> Edit
                                        </button>
                                        <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.Id" class="btn btn-outline-danger btn-sm fw-bold">
                                            <i class="bi bi-trash me-1"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Modal for Creating/Updating Category -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-white" style="background: linear-gradient(135deg, #ff416c, #ff4b2b);">
                <h5 class="modal-title" id="categoryModalLabel">Create New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="Category" asp-action="Create">
                    <div class="mb-3">
                        <label asp-for="Category.Name" class="form-label">Category Name</label>
                        <input asp-for="Category.Name" class="form-control" placeholder="Enter category name" required />
                        <span asp-validation-for="Category.Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Category.DisplayOrder" class="form-label">Display Order</label>
                        <input asp-for="Category.DisplayOrder" class="form-control" placeholder="Enter display order" required />
                        <span asp-validation-for="Category.DisplayOrder" class="text-danger"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function populateEditModal(element) {
            const categoryId = element.getAttribute('data-id');
            const categoryName = element.getAttribute('data-name');
            const displayOrder = element.getAttribute('data-display-order');

            document.querySelector('[name="Category.Name"]').value = categoryName || '';
            document.querySelector('[name="Category.DisplayOrder"]').value = displayOrder || '';
            document.getElementById('categoryModalLabel').innerText = 'Edit Category';

            const form = document.querySelector('form');
            form.setAttribute('action', `/Category/Edit/${categoryId}`);
        }
    </script>
}
 *@

<!-- Main Container -->
<div class="container-fluid px-4">
    <!-- Main Card -->
    <div class="card shadow-lg border-0 rounded-4 overflow-hidden">
        <!-- Card Header with Search and Filter -->
        <div class="card-header py-3" style="background: linear-gradient(135deg, #4e54c8, #8f94fb);">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <h4 class="text-white mb-0">
                    <i class="bi bi-grid me-2"></i>Categories List
                </h4>
                <div class="d-flex mt-2 mt-md-0">
                    <div class="input-group me-2" style="width: 250px;">
                        <span class="input-group-text bg-white border-0">
                            <i class="bi bi-search text-secondary"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-0 shadow-none"
                               placeholder="Search categories...">
                    </div>
                    <div class="dropdown me-2">
                        <button class="btn btn-light dropdown-toggle" type="button" id="filterDropdown"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-funnel me-1"></i> Filter
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="filterDropdown">
                            <li><a class="dropdown-item" href="#" data-sort="name-asc">By Name (A-Z)</a></li>
                            <li><a class="dropdown-item" href="#" data-sort="name-desc">By Name (Z-A)</a></li>
                            <li><a class="dropdown-item" href="#" data-sort="order-asc">By Order (Low-High)</a></li>
                            <li><a class="dropdown-item" href="#" data-sort="order-desc">By Order (High-Low)</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" data-filter="all">Show All</a></li>
                        </ul>
                    </div>
                    <button class="btn btn-light fw-bold shadow-sm px-4"
                            data-bs-toggle="modal"
                            data-bs-target="#categoryModal">
                        <i class="bi bi-plus-circle me-2"></i> Add New
                    </button>
                </div>
            </div>
        </div>

        <!-- Card Body -->
        <div class="card-body p-0">
            @if (!Model.Categories.Any())
            {
                <!-- Empty State with Illustration -->
                <div class="text-center py-5">
                    <div class="mb-4">
                        <img src="https://cdn-icons-png.flaticon.com/512/4076/4076478.png"
                             style="height: 120px; opacity: 0.7;" alt="No categories">
                    </div>
                    <h5 class="text-muted mb-3">No categories found</h5>
                    <p class="text-muted mb-4">Get started by creating your first product category</p>
                    <button class="btn btn-primary px-4 rounded-pill"
                            data-bs-toggle="modal"
                            data-bs-target="#categoryModal">
                        <i class="bi bi-plus-circle me-2"></i> Create Category
                    </button>
                </div>
            }
            else
            {
                <!-- Table with Enhanced Features -->
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0" id="categoriesTable">
                        <thead class="text-uppercase" style="background-color: #f8f9fa;">
                            <tr>
                                <th scope="col" class="ps-4" style="width: 40%;">Category</th>
                                <th scope="col" class="text-center" style="width: 15%;">Order</th>
                                <th scope="col" class="text-center" style="width: 20%;">Status</th>
                                <th scope="col" class="text-center" style="width: 25%;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in Model.Categories.OrderBy(u => u.DisplayOrder))
                            {
                                <tr class="category-row">
                                    <td class="ps-4">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-shrink-0 me-3">
                                                <div class="bg-primary bg-opacity-10 p-2 rounded-3">
                                                    <i class="bi bi-tag-fill text-primary"></i>
                                                </div>
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-0 fw-semibold">@obj.Name</h6>
                                                <small class="text-muted">ID: @obj.Id</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2 rounded-pill">
                                            @obj.DisplayOrder
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge bg-success bg-opacity-10 text-success px-3 py-2 rounded-pill">
                                            <i class="bi bi-check-circle-fill me-1"></i> Active
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center">
                                            <button class="btn btn-sm btn-outline-primary rounded-pill me-2"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#categoryModal"
                                                    data-id="@obj.Id"
                                                    data-name="@obj.Name"
                                                    data-display-order="@obj.DisplayOrder"
                                                    onclick="populateEditModal(this)">
                                                <i class="bi bi-pencil-square me-1"></i> Edit
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger rounded-pill delete-btn"
                                                    data-id="@obj.Id"
                                                    data-name="@obj.Name">
                                                <i class="bi bi-trash me-1"></i> Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination (if needed) -->
                <div class="d-flex justify-content-between align-items-center p-4 border-top">
                    <div class="text-muted">
                        Showing <span class="fw-semibold">1</span> to <span class="fw-semibold">@Model.Categories.Count()</span> of
                        <span class="fw-semibold">@Model.Categories.Count()</span> entries
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item disabled">
                                <a class="page-link" href="#">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal for Creating/Updating Category -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header" style="background: linear-gradient(135deg, #4e54c8, #8f94fb);">
                <h5 class="modal-title text-white" id="categoryModalLabel">
                    @if (Model.Category?.Id == null)
                    {
                        <span><i class="bi bi-plus-circle me-2"></i> Create New Category</span>
                    }
                    else
                    {
                        <span><i class="bi bi-pencil-square me-2"></i> Edit Category</span>
                    }
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <form method="post"
                      asp-controller="Category"
                      asp-action="@((Model.Category?.Id == null) ? "Create" : "Edit")"
                      asp-route-id="@Model.Category?.Id"
                      id="categoryForm">
                    <div class="mb-4">
                        <label asp-for="Category.Name" class="form-label fw-semibold">Category Name</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light border-end-0">
                                <i class="bi bi-tag text-secondary"></i>
                            </span>
                            <input asp-for="Category.Name" class="form-control ps-2"
                                   placeholder="Enter category name" required />
                        </div>
                        <span asp-validation-for="Category.Name" class="text-danger small"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="Category.DisplayOrder" class="form-label fw-semibold">Display Order</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light border-end-0">
                                <i class="bi bi-sort-numeric-up text-secondary"></i>
                            </span>
                            <input asp-for="Category.DisplayOrder" class="form-control ps-2"
                                   placeholder="Enter display order" required />
                        </div>
                        <span asp-validation-for="Category.DisplayOrder" class="text-danger small"></span>
                    </div>
                    <div class="modal-footer border-0 pt-0">
                        <button type="button" class="btn btn-outline-secondary rounded-pill px-4"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary rounded-pill px-4">
                            @if (Model.Category?.Id == null)
                            {
                                <i class="bi bi-plus-circle me-2"></i>
                                <span>Create Category</span>
                            }
                            else
                            {
                                <i class="bi bi-check-circle me-2"></i>
                                <span>Update Changes</span>
                            }
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title text-danger">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="categoryToDelete">this category</strong>?</p>
                <p class="small text-muted">This action cannot be undone and will permanently remove the category.</p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary rounded-pill px-4"
                        data-bs-dismiss="modal">
                    Cancel
                </button>
                <form id="deleteForm" method="post" asp-controller="Category" asp-action="Delete">
                    <input type="hidden" name="id" id="deleteCategoryId" />
                    <button type="submit" class="btn btn-danger rounded-pill px-4">
                        <i class="bi bi-trash-fill me-2"></i> Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .category-row:hover {
        background-color: rgba(78, 84, 200, 0.05);
    }

    .badge {
        font-weight: 500;
        letter-spacing: 0.5px;
    }

    .input-group-text {
        transition: all 0.3s ease;
    }

    .form-control:focus + .input-group-text {
        background-color: #e9ecef;
    }

    .delete-btn:hover {
        background-color: #dc3545;
        color: white !important;
    }
</style>

@section Scripts {
    <script>
        // Initialize variables
        let isEditMode = false;
        const createButton = document.querySelector('[data-bs-target="#categoryModal"]');
        const modalTitle = document.getElementById('categoryModalLabel');
        const categoryForm = document.getElementById('categoryForm');
        const categoryNameInput = document.querySelector('[name="Category.Name"]');
        const displayOrderInput = document.querySelector('[name="Category.DisplayOrder"]');

        // When create button is clicked
        createButton.addEventListener('click', function() {
            isEditMode = false;
            modalTitle.innerHTML = '<i class="bi bi-plus-circle me-2"></i> Create New Category';
            categoryForm.reset();
            categoryForm.setAttribute('action', '/Category/Create');
        });

        // Populate edit modal
        function populateEditModal(element) {
            isEditMode = true;
            const categoryId = element.getAttribute('data-id');
            const categoryName = element.getAttribute('data-name');
            const displayOrder = element.getAttribute('data-display-order');

            modalTitle.innerHTML = '<i class="bi bi-pencil-square me-2"></i> Edit Category';
            categoryNameInput.value = categoryName || '';
            displayOrderInput.value = displayOrder || '';
            categoryForm.setAttribute('action', `/Category/Edit/${categoryId}`);
        }
         
        // Reset form when modal is hidden
        document.getElementById('categoryModal').addEventListener('hidden.bs.modal', function() {
            if (!isEditMode) {
                categoryForm.reset();
                categoryForm.setAttribute('action', '/Category/Create');
            }
        });

        // Delete confirmation
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                const categoryName = this.getAttribute('data-name');

                document.getElementById('categoryToDelete').textContent = categoryName;
                document.getElementById('deleteCategoryId').value = categoryId;

                const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                deleteModal.show();
            });
        });

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchValue = this.value.toLowerCase();
            document.querySelectorAll('.category-row').forEach(row => {
                const categoryName = row.querySelector('h6').textContent.toLowerCase();
                row.style.display = categoryName.includes(searchValue) ? '' : 'none';
            });
        });

        // Sorting functionality
        document.querySelectorAll('[data-sort]').forEach(item => {
            item.addEventListener('click', function(e) {
                e.preventDefault();
                const sortType = this.getAttribute('data-sort');
                // Implement sorting logic here
                console.log('Sort by:', sortType);
            });
        });

        // Form submission feedback
        document.getElementById('categoryForm').addEventListener('submit', function(e) {
            // You can add form validation or submission feedback here
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}

<!-- #region name -->

@*  If you want to fetch data dynamically, replace the data-passing logic with an API call:

<a href="javascript:void(0);"
   class="btn btn-outline-warning btn-sm fw-bold"
   data-bs-toggle="modal"
   data-bs-target="#categoryModal"
   onclick="fetchCategoryData(@obj.Id)">
    <i class="bi bi-pencil-square me-1"></i> Edit
</a>

function fetchCategoryData(categoryId) {
    fetch(`/Category/GetById/${categoryId}`)
        .then(response => response.json())
        .then(category => {
            if (!category) {
                console.error('Category not found');
                return;
            }

            // Populate the modal fields
            document.getElementById('categoryModalLabel').innerText = 'Edit Category';
            document.querySelector('[name="Category.Name"]').value = category.name || '';
            document.querySelector('[name="Category.DisplayOrder"]').value = category.displayOrder || '';

            // Update the form action
            document.querySelector('form').setAttribute('action', `/Category/Edit/${category.id}`);
        })
        .catch(error => {
            console.error('Error fetching category data:', error);
        });
}
 *@

<!-- #endregion -->