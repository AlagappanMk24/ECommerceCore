@using ECommerceCore.Application.Contract.ViewModels
@model CategoryVM
<link rel="stylesheet" href="~/css/category/category.css" />

@if (!Model.Categories.Any())
{
    <!-- Empty State with Illustration -->
    <div class="text-center py-5">
        <div class="mb-4">
            <img src="https://cdn-icons-png.flaticon.com/512/4076/4076478.png"
                 style="height: 120px; opacity: 0.7;" alt="No categories">
        </div>
        <h5 class="text-muted mb-3">No categories found</h5>
        <p class="text-muted mb-4">Get started by creating your first product category</p>
        <button class="btn btn-primary px-4 rounded-pill"
                data-bs-toggle="modal"
                data-bs-target="#categoryModal">
            <i class="bi bi-plus-circle me-2"></i> Create Category
        </button>
    </div>
}
else
{
    <!-- Table with Enhanced Features -->
    <div class="table-responsive">
        <table class="table table-hover align-middle mb-0" id="categoriesTable">
            <thead class="text-uppercase" style="background-color: #f8f9fa;">
                <tr>
                    <th scope="col" class="ps-4" style="width: 40%;">Category</th>
                    <th scope="col" class="text-center" style="width: 15%;">Order</th>
                    <th scope="col" class="text-center" style="width: 20%;">Status</th>
                    <th scope="col" class="text-center" style="width: 25%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in Model.Categories.OrderBy(u => u.DisplayOrder))
                {
                    <tr class="category-row">
                        <td class="ps-4">
                            <div class="d-flex align-items-center">
                                <div class="flex-shrink-0 me-3">
                                    <div class="bg-primary bg-opacity-10 p-2 rounded-3">
                                        <i class="bi bi-tag-fill text-primary"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0 fw-semibold">@obj.Name</h6>
                                    <small class="text-muted">ID: @obj.Id</small>
                                </div>
                            </div>
                        </td>
                        <td class="text-center">
                            <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2 rounded-pill">
                                @obj.DisplayOrder
                            </span>
                        </td>
                        <td class="text-center">
                            <span class="badge bg-success bg-opacity-10 text-success px-3 py-2 rounded-pill">
                                <i class="bi bi-check-circle-fill me-1"></i> Active
                            </span>
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-sm btn-outline-primary rounded-pill me-2"
                                        data-bs-toggle="modal"
                                        data-bs-target="#categoryModal"
                                        data-id="@obj.Id"
                                        onclick="populateEditModal(this)">
                                    <i class="bi bi-pencil-square me-1"></i> Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger rounded-pill delete-btn"
                                        data-id="@obj.Id"
                                        data-name="@obj.Name">
                                    <i class="bi bi-trash me-1"></i> Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination (if needed) -->
    <div class="d-flex justify-content-between align-items-center p-4 border-top">
        <div class="text-muted">
            Showing <span class="fw-semibold">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span>
            to <span class="fw-semibold">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalRecords)</span>
            of <span class="fw-semibold">@Model.TotalRecords</span> entries
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0);" onclick="loadCategories(@(Model.CurrentPage - 1))">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="javascript:void(0);" onclick="loadCategories(@i)">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0);" onclick="loadCategories(@(Model.CurrentPage + 1))">Next</a>
                </li>
            </ul>
        </nav>
    </div>
}